# -*- coding: utf-8 -*-
"""Processing Time series data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z-cLBM-P4ZwgWo8Y2mDz3AWkO6wlj1ih

##Importing Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import periodogram
import seaborn as sns
import statsmodels.api as sm
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from sklearn.linear_model import LinearRegression
from statsmodels.tsa.seasonal import seasonal_decompose

"""##Loading Data"""

# Load data
nueces_bay_data_initial = pd.read_csv("NuecesBay_RawDataOnly.csv")
galv_data_intial = pd.read_csv("2010-2019.csv")

nueces_bay_data_initial

galv_data_intial

# Drop last two rows
galv_data_intial = galv_data_intial.iloc[:-2,:]

# Replace non-numeric values with NaN
galv_data_intial['022-pwl'] = pd.to_numeric(galv_data_intial['022-pwl'], errors='coerce')

galv_data_intial

"""##Filtering data for the year 2019"""

# Convert '#date+time' column to datetime if not already in datetime format
nueces_bay_data_initial['#date+time'] = pd.to_datetime(nueces_bay_data_initial['#date+time'])
galv_data_intial['#date+time'] = pd.to_datetime(galv_data_intial['#date+time'])

# Filter data for the year 2019
nueces_bay_data_2019 = nueces_bay_data_initial[nueces_bay_data_initial['#date+time'].dt.year == 2019]
galv_data_2019 = galv_data_intial[galv_data_intial['#date+time'].dt.year == 2019]

# Display the first few rows of the filtered data to verify
print("Nueces Bay 2019 Data:")
print(nueces_bay_data_2019.head())

print("\nGalveston 2019 Data:")
print(galv_data_2019.head())

"""###Dealing with Null values!"""

nueces_bay_data_2019.isnull().sum()

nueces_bay_data_2019['185-pwl']= nueces_bay_data_2019['185-pwl'].fillna(method='ffill')
nueces_bay_data_2019.isnull().sum()

galv_data_2019.isnull().sum()

galv_data_2019['022-pwl']= galv_data_2019['022-pwl'].fillna(method='ffill')
galv_data_2019.isnull().sum()

"""##Resampling Data for each Day!!"""

# Resample Nueces Bay data for each day
nueces_bay_data_resampled = nueces_bay_data_2019.resample('D', on='#date+time').mean()

# Resample Pier 21 Galveston data for each day
galv_data_resampled = galv_data_2019.resample('D', on='#date+time').mean()

# Display the resampled data
print("Resampled Nueces Bay 2019 Data:")
print(nueces_bay_data_resampled.head())

print("\nResampled Pier 21 Galveston 2019 Data:")
print(galv_data_resampled.head())

"""##Time Series Plot two station."""

# Create time series plot for Nueces Bay
plt.figure(figsize=(10, 6))
plt.plot(nueces_bay_data_resampled.index, nueces_bay_data_resampled['185-pwl'], label='Nueces Bay')
plt.title('Nueces Bay Water Level - 2019')
plt.xlabel('Date')
plt.ylabel('Water Level')
plt.grid(True)
plt.legend()
plt.show()

# Create time series plot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
plt.plot(galv_data_resampled.index, galv_data_resampled['022-pwl'], label='Pier 21 Galveston')
plt.title('Pier 21 Galveston Water Level - 2019')
plt.xlabel('Date')
plt.ylabel('Water Level')
plt.grid(True)
plt.legend()
plt.show()

"""##Boxplot for two station."""

# Extract month from the date
nueces_bay_data_resampled['Month'] = nueces_bay_data_resampled.index.month
galv_data_resampled['Month'] = galv_data_resampled.index.month

# Create boxplot for Nueces Bay
plt.figure(figsize=(10, 6))
nueces_bay_data_resampled.boxplot(column='185-pwl', by='Month', ax=plt.gca())
plt.title('Nueces Bay Water Level Boxplot - 2019')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.suptitle('')
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

# Create boxplot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
galv_data_resampled.boxplot(column='022-pwl', by='Month', ax=plt.gca())
plt.title('Pier 21 Galveston Water Level Boxplot - 2019')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.suptitle('')
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

"""##Removing Outliers!!"""

# Remove outliers using the interquartile range (IQR) method
def remove_outliers(df, column):
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]

# Remove outliers for Nueces Bay data
nueces_bay_data_resampled_cleaned = remove_outliers(nueces_bay_data_resampled, '185-pwl')

# Remove outliers for Pier 21 Galveston data
galv_data_resampled_cleaned = remove_outliers(galv_data_resampled, '022-pwl')

# Create boxplot for Nueces Bay
plt.figure(figsize=(10, 6))
nueces_bay_data_resampled_cleaned.boxplot(column='185-pwl', by='Month', ax=plt.gca())
plt.title('Nueces Bay Water Level Boxplot - 2019 (Outliers Removed)')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.suptitle('')
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

# Create boxplot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
galv_data_resampled_cleaned.boxplot(column='022-pwl', by='Month', ax=plt.gca())
plt.title('Pier 21 Galveston Water Level Boxplot - 2019 (Outliers Removed)')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.suptitle('')
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

"""##Time Series Plot after removing outliers."""

# Create time series plot for Nueces Bay
plt.figure(figsize=(10, 6))
plt.plot(nueces_bay_data_resampled_cleaned.index, nueces_bay_data_resampled_cleaned['185-pwl'], label='Nueces Bay')
plt.title('Nueces Bay Water Level Time Series - 2019 (Outliers Removed)')
plt.xlabel('Date')
plt.ylabel('Water Level')
plt.grid(True)
plt.legend()
plt.show()

# Create time series plot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
plt.plot(galv_data_resampled_cleaned.index, galv_data_resampled_cleaned['022-pwl'], label='Pier 21 Galveston')
plt.title('Pier 21 Galveston Water Level Time Series - 2019 (Outliers Removed)')
plt.xlabel('Date')
plt.ylabel('Water Level')
plt.grid(True)
plt.legend()
plt.show()

"""##Violin Plot for two station."""

# Create violin plot for Nueces Bay
plt.figure(figsize=(10, 6))
sns.violinplot(x='Month', y='185-pwl', data=nueces_bay_data_resampled_cleaned)
plt.title('Nueces Bay Water Level Distribution by Month - 2019 (Outliers Removed)')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.grid(True)
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.show()

# Create violin plot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
sns.violinplot(x='Month', y='022-pwl', data=galv_data_resampled_cleaned)
plt.title('Pier 21 Galveston Water Level Distribution by Month - 2019 (Outliers Removed)')
plt.xlabel('Month')
plt.ylabel('Water Level')
plt.grid(True)
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.show()

# Create boxplot for Nueces Bay
plt.figure(figsize=(10, 6))
sns.boxplot(y='185-pwl', data=nueces_bay_data_resampled_cleaned)
plt.title('Nueces Bay Water Level Distribution - 2019')
plt.ylabel('Water Level')
plt.grid(True)
plt.show()

# Create boxplot for Pier 21 Galveston
plt.figure(figsize=(10, 6))
sns.boxplot(y='022-pwl', data=galv_data_resampled_cleaned)
plt.title('Pier 21 Galveston Water Level Distribution - 2019')
plt.ylabel('Water Level')
plt.grid(True)
plt.show()

"""##Comparing Time Series for both stations.

##Water Level Camparision of two station by Histogram!
"""

# Plot histogram for Nueces Bay and Pier 21 Galveston
plt.figure(figsize=(10, 6))
plt.hist(nueces_bay_data_resampled_cleaned['185-pwl'], bins=30, alpha=0.5, color='blue', label='Nueces Bay')
plt.hist(galv_data_resampled_cleaned['022-pwl'], bins=30, alpha=0.5, color='green', label='Pier 21 Galveston')
plt.title('Water Level Distribution Histogram - 2019')
plt.xlabel('Water Level')
plt.ylabel('Frequency')
plt.grid(True)
plt.legend()
plt.show()

"""##Scatter Plot of the two station."""

# Inner join on timestamps to align the data frames
merged_data = pd.merge(nueces_bay_data_resampled_cleaned, galv_data_resampled_cleaned, on='#date+time', suffixes=('_nueces_bay', '_galveston'))

# Plot scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(merged_data['185-pwl'], merged_data['022-pwl'], alpha=0.5)
plt.title('Scatter Plot of Water Levels - 2019')
plt.xlabel('Nueces Bay Water Level')
plt.ylabel('Pier 21 Galveston Water Level')
plt.grid(True)
plt.show()

"""##Time series of both stations."""

# Plot time series for both stations
plt.figure(figsize=(12, 6))
plt.plot(nueces_bay_data_resampled_cleaned.index, nueces_bay_data_resampled_cleaned['185-pwl'], label='Nueces Bay')
plt.plot(galv_data_resampled_cleaned.index, galv_data_resampled_cleaned['022-pwl'], label='Pier 21 Galveston')
plt.title('Water Level Time Series Comparison (2019)')
plt.xlabel('Date')
plt.ylabel('Water Level')
plt.legend()
plt.grid(True)
plt.show()

"""Nueces Bay generally has higher water levels than Pier 21 Galveston, with peaks around 8 feet in May and lows around 3 feet in September. Similar patterns are seen in Pier 21 Galveston, with peaks around 7 feet and lows around 2 feet.

## Autocorrelation and Partial Correlation of two stations.
"""

# Plot autocorrelation and partial autocorrelation for Nueces Bay
fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(14, 7))
plot_acf(nueces_bay_data_resampled_cleaned['185-pwl'], lags=100, ax=axes[0, 0], title='Autocorrelation - Nueces Bay')
plot_pacf(nueces_bay_data_resampled_cleaned['185-pwl'], lags=100, ax=axes[0, 1], title='Partial Autocorrelation - Nueces Bay')

# Plot autocorrelation and partial autocorrelation for Pier 21 Galveston
plot_acf(galv_data_resampled_cleaned['022-pwl'], lags=100, ax=axes[1, 0], title='Autocorrelation - Pier 21 Galveston')
plot_pacf(galv_data_resampled_cleaned['022-pwl'], lags=100, ax=axes[1, 1], title='Partial Autocorrelation - Pier 21 Galveston')

plt.tight_layout()
plt.show()

"""##Periodogram of two stations."""

sampling_interval = 1

# Calculate periodogram for Nueces Bay
frequencies_nueces_bay, power_spectrum_nueces_bay = plt.psd(nueces_bay_data_resampled_cleaned['185-pwl'],
                                                            NFFT=len(nueces_bay_data_resampled_cleaned),
                                                            Fs=1/sampling_interval,
                                                            pad_to=len(nueces_bay_data_resampled_cleaned)*2)

# Calculate periodogram for Pier 21 Galveston
frequencies_galv, power_spectrum_galv = plt.psd(galv_data_resampled_cleaned['022-pwl'],
                                                 NFFT=len(galv_data_resampled_cleaned),
                                                 Fs=1/sampling_interval,
                                                 pad_to=len(galv_data_resampled_cleaned)*2)

# Plot the periodograms
plt.figure(figsize=(6.5, 6))
plt.plot(frequencies_nueces_bay, power_spectrum_nueces_bay, label='Nueces Bay')
plt.plot(frequencies_galv, power_spectrum_galv, label='Pier 21 Galveston')
plt.xlabel('Frequency (cycles per hour)')
plt.ylabel('Power Spectrum')
plt.title('Periodogram of Water Level Data')
plt.legend()
plt.grid(True)
plt.show()

"""##Plotting Trend line using Linear Regression."""

# Function to fit linear regression model and plot trend line
def fit_linear_regression_and_plot_trend(df, water_level_col, station_name):
    # Convert date-time to numeric values (e.g., seconds since the start of the time series)
    start_date = df.index.min()
    df['time_elapsed'] = (df.index - start_date).total_seconds()

    # Fit a linear regression model
    X = df[['time_elapsed']]
    y = df[water_level_col]
    model = LinearRegression().fit(X, y)

    # Predict values using the model
    predictions = model.predict(X)

    # Plot the original data
    plt.figure(figsize=(10, 6))
    plt.plot(df.index, df[water_level_col], label='Original Data')

    # Plot the trend line
    plt.plot(df.index, predictions, color='red', label='Trend Line')

    # Customize plot
    plt.title(f'{station_name} Water Level Data with Trend Line')
    plt.xlabel('Date')
    plt.ylabel('Water Level')
    plt.legend()
    plt.grid(True)
    plt.show()

# Fit linear regression and plot trend line for Nueces Bay
fit_linear_regression_and_plot_trend(nueces_bay_data_resampled_cleaned, '185-pwl', 'Nueces Bay')

# Fit linear regression and plot trend line for Pier 21 Galveston
fit_linear_regression_and_plot_trend(galv_data_resampled_cleaned, '022-pwl', 'Pier 21 Galveston')

"""##Seasonal trend Decomposition for the two stations."""

# STL decomposition for Nueces Bay
result_nueces_bay = seasonal_decompose(nueces_bay_data_resampled_cleaned['185-pwl'], model='additive', period=24)

# STL decomposition for Pier 21 Galveston
result_galveston = seasonal_decompose(galv_data_resampled_cleaned['022-pwl'], model='additive', period=24)

# Plot STL decomposition for Nueces Bay
plt.figure(figsize=(12, 8))
plt.subplot(3, 1, 1)
plt.plot(nueces_bay_data_resampled_cleaned.index, nueces_bay_data_resampled_cleaned['185-pwl'], label='Original')
plt.legend(loc='upper left')
plt.title('Nueces Bay Water Level - STL Decomposition')
plt.subplot(3, 1, 2)
plt.plot(nueces_bay_data_resampled_cleaned.index, result_nueces_bay.trend, label='Trend')
plt.legend(loc='upper left')
plt.subplot(3, 1, 3)
plt.plot(nueces_bay_data_resampled_cleaned.index, result_nueces_bay.seasonal, label='Seasonal')
plt.legend(loc='upper left')
plt.tight_layout()
plt.show()

# Plot STL decomposition for Pier 21 Galveston
plt.figure(figsize=(12, 8))
plt.subplot(3, 1, 1)
plt.plot(galv_data_resampled_cleaned.index, galv_data_resampled_cleaned['022-pwl'], label='Original')
plt.legend(loc='upper left')
plt.title('Pier 21 Galveston Water Level - STL Decomposition')
plt.subplot(3, 1, 2)
plt.plot(galv_data_resampled_cleaned.index, result_galveston.trend, label='Trend')
plt.legend(loc='upper left')
plt.subplot(3, 1, 3)
plt.plot(galv_data_resampled_cleaned.index, result_galveston.seasonal, label='Seasonal')
plt.legend(loc='upper left')
plt.tight_layout()
plt.show()

"""##Linear regression coefficient(slope) for both stations."""

# Convert date/time to numerical values
nueces_bay_data_resampled_cleaned['days'] = (nueces_bay_data_resampled_cleaned.index - nueces_bay_data_resampled_cleaned.index.min()).days
galv_data_resampled_cleaned['days'] = (galv_data_resampled_cleaned.index - galv_data_resampled_cleaned.index.min()).days

# Reshape data for linear regression
X_nueces_bay = nueces_bay_data_resampled_cleaned['days'].values.reshape(-1, 1)
y_nueces_bay = nueces_bay_data_resampled_cleaned['185-pwl'].values

X_galv = galv_data_resampled_cleaned['days'].values.reshape(-1, 1)
y_galv = galv_data_resampled_cleaned['022-pwl'].values

# Fit linear regression model for Nueces Bay
model_nueces_bay = LinearRegression()
model_nueces_bay.fit(X_nueces_bay, y_nueces_bay)

# Fit linear regression model for Pier 21 Galveston
model_galv = LinearRegression()
model_galv.fit(X_galv, y_galv)

print("Nueces Bay Linear Regression Coefficient (slope):", model_nueces_bay.coef_[0])
print("Pier 21 Galveston Linear Regression Coefficient (slope):", model_galv.coef_[0])

"""
Since both coefficients are positive and significantly different from zero, it suggests the presence of a positive linear trend in the water level data for both Nueces Bay and Pier 21 Galveston. This indicates that the water level tends to increase over time linearly."""